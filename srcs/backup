	// // POUR TEST PIPES(avant ast) ==> à intégrer au main
	// // 1er maillon
	// t_cmdinfo	new0;
	// char		cmd0[] = "test 1eme cmd";
	// new0.flagpipe = 1;
	// new0.exec = malloc(sizeof(char *) * 2);
	// new0.exec[0] = cmd0;
	// new0.exec[1] = NULL;
	// new0.dir = NULL;
	// g_shell->cmd = ft_lstnew(&new0);
	// // 2e maillon
	// t_cmdinfo	new1;
	// char		cmd1[] = "test 2eme cmd";
	// new1.flagpipe = 1;
	// new1.exec = malloc(sizeof(char *) * 2);
	// new1.exec[0] = cmd1;
	// new1.exec[1] = NULL;
	// new1.dir = NULL;
	// ft_lstadd_back(&g_shell->cmd, ft_lstnew(&new1));
	// // 3e maillon
	// t_cmdinfo	new2;
	// char		cmd2[] = "test 3eme cmd";
	// new2.flagpipe = 0;
	// new2.exec = malloc(sizeof(char *) * 2);
	// new2.exec[0] = cmd2;
	// new2.exec[1] = NULL;
	// new2.dir = NULL;
	// ft_lstadd_back(&g_shell->cmd, ft_lstnew(&new2));
	// // FIN TEST



	// //POUR TEST ENV ==> à intégrer au main
	// #include <stdio.h>
	// int i;
	// i = 0;
	// printf("char **env :");
	// while (env[i] != NULL)
	// {
	//     printf("%s\n", env[i]);
	//     i++;
	// }
	// printf("-\n-\n-\n");
	// printf("lst env :");
	// while (g_shell->env != NULL)
	// {
	//     printf("%s\n", g_shell->env->content);
	//     g_shell->env = g_shell->env->next;
	// }
	// // FIN TEST